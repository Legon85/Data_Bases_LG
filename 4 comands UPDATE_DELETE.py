# UPDATE - изменение данных в записях
# DELETE - удаление записей из таблицы


# синтаксис UPDATE:
# UPDATE имя_таблицы SET имя_столбца = новое_значение WHERE условие

# обнулим с помощью команды UPDATE значения в столбце score: UPDATE users SET score = 0
# Отсутствие ключевого слова WHERE означает, что нет условий и мы обнуляем все значения score
# На практике такой вид sql запроса выполняется довольно редко потому, что он затрагивает все записи столбца score
# Как правило, он записывается со строгим фильтром, например: UPDATE users SET score = 1000 WHERE rowid = 1 (в
# данном варианте мы меняем значение score для записи у которой rowid = 1)
# Или, например, можно всем игрокам женского пола увеличить очки на 500 следующим фильтром:
# UPDATE users SET score = score+500 WHERE sex = 2
# А так же можно в фильтре обращаться к игроку исключительно по имени с помощью синтаксиса LIKE и присвоить ему,
# например, 1500 очков: UPDATE users SET score = 1500 WHERE name LIKE 'Фёдор'
# После оператора LIKE можно прописывать дополнительные шаблоны(% - любое продолжение строки, _ - любой один
# текущий символ) Например: запись UPDATE users SET score = score + 100 WHERE name LIKE 'М%'   означает,
# что мы прибавляем по 100 очков всем записям с именами начинающимися на 'M'
# либо же можно так прописать:  UPDATE users SET score = 700 WHERE name LIKE 'С_рг%', что означает поставить 700
# очков игроку с именем у которого на втором месте любой символ, символы после 2-го: рг, а после символа "г"
# любые оставшиеся символы

# Но на практике злоупотреблять сравнением строк(как выше описано) не следует т.к. это довольно ресурсоёмкая
# задача и целесообразней пользоваться сравнением чисел. Например:
# UPDATE users SET score = 800,old = 45 WHERE old > 40, что означает, что мы меняем очки на 800 и возраст на 45
# всем игрокам у кого возраст больше 40


# Синтаксис DELETE:
# DELETE FROM имя_таблицы WHERE условие
# при чём условие делают строгим, что бы не удалить каки-то лишние записи. И для этого часто используют поле
# rowid для выборки нужных записей. Например:
# Чтоб вывести rowid в таблице выполним запрос SELECT rowid, * FROM users
# DELETE FROM users WHERE rowid in (2,5)  означает, что удаляем все записи у которых rowid = 2 и 5

# При этом если добавить какую-либо запись, например, INSERT INTO users VALUES('Даша', 2, 2, 1200),
# то она добавится 9-ой по счёту. Что означает, что при добавлении записи, они не добавляются в порядке очереди
# rowid, а просто добавляются в конец. rowid это лишь уникальный номер записи и не более того.
